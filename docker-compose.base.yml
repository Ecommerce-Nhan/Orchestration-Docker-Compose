name: ecommerce

networks:
  ecommerce-network:
    driver: bridge

services:
  postgres:
    image: postgres:latest
    container_name: Database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  gateway:
    image: api-gateway:latest
    build:
      context: ./APIGateway
      dockerfile: Dockerfile
      args:
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
    volumes:
      - D:\Microservice\Services\SSC.pfx:/app/certificate.pfx:ro
    networks:
      - ecommerce-network
    deploy:
      replicas: 2
      restart_policy:
        condition: always

  nginx:
    image: nginx:alpine
    container_name: LoadBalancer
    ports:
      - "8090:8090"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-selfsigned.crt:/etc/nginx/certs/nginx-selfsigned.crt:ro
      - ./nginx-selfsigned.key:/etc/nginx/certs/nginx-selfsigned.key:ro
    depends_on:
      - gateway
    networks:
      - ecommerce-network

  redis:
    image: redis:latest
    container_name: RedisCache
    ports:
      - "6379:6379"
    volumes:
      - D:\Docker\Data\Redis:/data
    depends_on:
      - gateway
    networks:
      - ecommerce-network
